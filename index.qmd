---
title: "UFA Analysis"
author: "Teemu SÃ¤ilynoja"
date: 2025/03/21
date-modified: today
format:
  html:
    code-tools: true
    toc-title: " "
    reference-location: margin
    citation-location: margin
    
execute:
  warning: false
  message: false
  echo: false
  cache: true

knitr:
  opts_chunk:
    dev: svg
    dev.args: { bg: "transparent" }
    fig.path: ./figures/
---

```{r}
#| label: imports
#| cache: false
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)

palette <- list(
  red = "#bf616a",
  orange = "#d08770",
  yellow = "#ebcb8b",
  green = "#a3be8c",
  purple = "#b48ead",
  lblue = "#88c0d0",
  dblue = "#81a1c1",
  white = "#d8dee9",
  black = "#3b4252",
  gray = "#8699bb"
)
```

```{r}
#| label: data_loading
full_data <-
  read.csv2("data/all_games_1024.csv", sep = ",") |>
  mutate(across(
    everything(),
    .fns = \(x) type.convert(x, as.is = TRUE)
  )) |>
  mutate(
    is_home_team = is_home_team == "True"
  )

```

This post got inspired by the publication of a dataset containing details on
`r nrow(full_data)` passes from `r length(unique(full_data$gameID))` games,
played during the 2021 to 2024 seasons of the professional league by Ultimate
Frisbee Association (UFA). The dataset was published together with a 2025 sports
analytics paper on [estimating player value and decision making in ultimate
frisbee](https://www.sloansportsconference.com/research-papers/a-machine-learnin
g-approach-to-throw-value-estimation-in-professional-ultimate-frisbee), by
Eberhard, Miller, and Sandholz.

I have often wondered *how much does a good pull actually affect the offense*,
and celebrated when an opponent takes a timeout, as *the most likely pass for
the offense to lose possession is right after a time out*. With this dataset, I
can put some numbers behind these questions and claims!


## Effect of pulls
```{r}
#| label: pulls_data
 pulls <- full_data |>
  group_by(
    gameID, total_points, game_quarter
  ) |>
  summarise(
    start_type = {
      if (thrower_x[1] == 0 & thrower_y[1] == 40) {
        "Brick"
      } else if ((abs(thrower_x[1]) > 15 & thrower_y[1] < 15) | thrower_y[1] < 7) {
        "Good"
      } else if (thrower_y[1] < 40) {
        "OK"
      } else {
        "Failed"
      }
    },
    is_offense_goal = {
      (is_home_team[1] == tail(is_home_team, 1)) & tail(receiver_y,1) > 100
    },
    x = thrower_x[1],
    y = thrower_y[1],
    .groups = "drop")
```

```{r}
#| label: fig-pull-results
#| cache: false
#| fig-height: 16
#| fig-width: 8
#| fig-cap: How I classified the pull results for this analysis.
#| column: margin
ggplot(pulls) +
  geom_tile(
    aes(x = 0, y = c(10, 110, 60), height = c(20, 20, 80), width = 54),
    data = data.frame(),
    fill = palette$green,
    color = palette$white,
    linewidth = 2
  ) +
  geom_point(
    aes(x, y,
        color = factor(start_type, levels = c("Good", "OK", "Brick", "Failed")),
        size = I(ifelse(start_type == "Brick", 4, 2))),
    alpha = .5
  ) +
  coord_equal(xlim = c(-27.5, 27.5), ylim = c(-0.5,120.5), expand = FALSE) +
  theme_void(base_family="sans") +
  theme(
    legend.position = "bottom",
    legend.text = element_text(colour = palette$gray, size = 28),
    legend.title = element_text(colour = palette$gray, size = 32)) +
  scale_color_manual(
    values = c("Good" = palette$yellow,
               "OK" = palette$orange,
               "Brick" = palette$lblue,
              "Failed" = palette$red)
  ) +
  guides(
    color = guide_legend(override.aes = list(size = 5, alpha = 1)),
    size = "none"
  ) +
  labs(color = "Pull result: ")
  
```

The dataset contains `r nrow(pulls)` played points. Of these, `r sum(
pulls$start_type %in% c("Brick", "Failed"))` start with the offense
on the brick mark, or further on the field. That is, **`r round(100 *
mean(pulls$start_type %in% c("Brick", "Failed")), 1)`% of the offenses in the
dataset started from the brick mark, or closer to the opposing end-zone**.

But did the offense benefit from these bad pulls, and what about the effect of
the very good pulls?

```{r}
pull_results <- pulls |>
  group_by(start_type) |>
  summarise(
    offense_scoring_rate = round(100 * mean(is_offense_goal), 1),
    n = n()
  )
  pull_results[c(3,4,1,2), ] |>
  kbl(
    digits = 2,
    label = NA,
    col.names = c("Pull result", "Offense held (%)", "Num. points"),
    table.attr = 'data-quarto-disable-processing="true"',
    caption = "A good pull is noticeably more likely to result in a break."
  ) |>
  kable_styling(full_width = FALSE)
```

Above, I consider a good pull to heightinside the end-zonwidthither of the
horizontal quarters closest to the sideline. If the pull doesn't make it past
the brick mark, I mark it as a failed one. On average, good pulls seem to result
in
`r 100 * round(
  (
    mean(pulls[pulls$start_type != "Good", ]$is_offense_goal) -
      mean(pulls[pulls$start_type == "Good", ]$is_offense_goal)
  ) / (
    1 - mean(pulls[pulls$start_type != "Good", ]$is_offense_goal)
  ),2)`%
more breaks. A mediocre pull does not fare much better than a bricked one, so
as long as the pull gets past the brick mark, it seems to be worth it to go for
the corners!

Although, even the effect of nailing ***every*** pull in a match is quite small;
`r round(
  (full_data |>
  group_by(gameID) |>
  reframe(points = c(tail(home_team_score,1),
                     tail(away_team_score, 1))) |>
  pull(points) |> mean()
  ) * (
  mean(pulls[pulls$start_type != "Good", ]$is_offense_goal) -
  mean(pulls[pulls$start_type == "Good", ]$is_offense_goal)
  ), 2)
  `
  extra breaks per the average
  `r round(full_data |>
  group_by(gameID) |>
  reframe(points = c(tail(home_team_score,1),
                     tail(away_team_score, 1))) |>
  pull(points) |>
  mean(), 0)`
 defense points played per match, but often^[Of the recorded matches,
  `r 100 * round(
    full_data |>
      group_by(gameID) |>
      summarise(score_diff_one = abs(tail(score_diff, 1)) == 1) |>
      pull(score_diff_one) |>
      mean(),
    1
  )`% ended in a score difference of one.] that one break is all your team needs.

